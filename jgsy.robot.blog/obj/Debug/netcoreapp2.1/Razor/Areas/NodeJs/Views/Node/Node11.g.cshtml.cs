#pragma checksum "E:\2018blog\JGSY.Robot.Blog\jgsy.robot.blog\Areas\NodeJs\Views\Node\Node11.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "dd5c2d6a392941ccbd68645c6210ef9aa037f4ad"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_NodeJs_Views_Node_Node11), @"mvc.1.0.view", @"/Areas/NodeJs/Views/Node/Node11.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/NodeJs/Views/Node/Node11.cshtml", typeof(AspNetCore.Areas_NodeJs_Views_Node_Node11))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dd5c2d6a392941ccbd68645c6210ef9aa037f4ad", @"/Areas/NodeJs/Views/Node/Node11.cshtml")]
    public class Areas_NodeJs_Views_Node_Node11 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/nodejs/20180916/1.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/nodejs/20180916/s1.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/nodejs/20180916/s2.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/nodejs/20180916/s3.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 231, true);
            WriteLiteral("<div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n    <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <h4>nodejs Nginx express jade </h4>\r\n    </div>\r\n    <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <h5>部署结构</h5>\r\n        ");
            EndContext();
            BeginContext(231, 37, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6a69a5efef274afea66a06640c4cd4b4", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(268, 98, true);
            WriteLiteral("\r\n    </div>\r\n    <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <h5>ssh无密码登录</h5>\r\n        ");
            EndContext();
            BeginContext(366, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "58182fe7c4884ec8b6590b352bb02e6b", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(404, 10, true);
            WriteLiteral("\r\n        ");
            EndContext();
            BeginContext(414, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "81230dcccd5044f0a1b05498a72a31f8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(452, 10, true);
            WriteLiteral("\r\n        ");
            EndContext();
            BeginContext(462, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "3ef3ae94181b485485259868d370a0eb", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(500, 488, true);
            WriteLiteral(@"
        <pre>
    Ubuntu Server 16.04.1 LTS 64位
    首先更新源 sudo apt-get update
    安装服务端 openssh(默认已安装) 
    sudo apt-get install openssh-server （备注未安装 会有输入提示：输入大写的 Y）
    安装客户端 
    sudo apt-get install openssh-client（我这里是windows 不需要了,如果是两台linux系统双向登录 都得安装）
    
    ssh -l ubuntu 119.29.104.251     （ssh -l [用户名] [远程ip]）本地 ssh localhost
    测试登录成功后，

    生成ssh key（最好不要用root用户生成）
    ssh-keygen -t rsa -b 4096 -C ""XXX@162.com"" 回车默认 或者ssh-keygen -t rsa -P """" 、ssh-keygen 等
");
            EndContext();
            BeginContext(1048, 5199, true);
            WriteLiteral(@"    将公钥追加到 authorized_keys 文件中 cat .ssh/id_rsa.pub >> .ssh/authorized_keys

    赋予 authorized_keys 文件权限 chmod 700 .ssh chmod 600 .ssh/authorized_keys
    ssh localhost  第一次需要输入 yes 

    测试登录成功后 本机基本设置已完成 以A为客户端B为服务端 执行以下命令
    
    ⑴复制 A 的公钥到 B 上 都是Linux
    ①scp robot@119.29.104.251:/home/robot/.ssh/id_rsa.pub /home/robot  （scp master_userName@master_ip:master_file A _folder）
    将 A 公钥追加到 B 的 authorized_keys 文件中，删除 A 公钥文件
    ②cat /home/robot/id_rsa.pub >> .ssh/authorized_keys
    ③rm /home/robot/id_rsa.pub     
    ④eval ""$(ssh-agent -s)""  开启代理 
    ssh-add ~/.ssh/id_rsa   把key加入到代理中
    /etc/ssh/sshd_config  配置需要修改    添加或自改为 PermitRootLogin yes
        /etc/ssh/sshd_config默认端口是22 修改  最下面添加 
        AllowUsers ubuntu 保存重启ssh服务  sudo service ssh restart
        
        ubuntu 属于 sudo 用户组 
          addUser  ubuntu  输入密码 这里输入的信息最好记录一下XX.txt
          gpasswd -a ubuntu sudo  添加到sudo 组
                
          sudo visudo   更改内容如下 对用户生效
                    ubuntu ALL=(ALL:ALL) ALL  ");
            WriteLiteral(@"
                            1 all、 对所有sudo生效
                            2 all、 ubuntu可以以任何用户执行命令
                            3 all、 ubuntu可以以任何组执行命令
                            4 all、 ubuntu使用所有组
                           ctrl+s 回车 Y 
        禁用掉root登录 无密码登录 
        PermitRootLogin no
        PasswordAuthentication no
        PermitEmptyPasswords no
    sudo service ssh restart
    ⑵这里是windows直接（通过putty登录） copy到authorized_keys 
      或者  （ssh-copy-id -i C:/Users/jack/.ssh/id_rsa.pub ubuntu@119.29.104.251）     copy到authorized_keys
      如果改了 port=22 --> port=30000 
        ssh  ubuntu@119.29.104.251
        ssh -p 30000  ubuntu@119.29.104.251
    完活
    sudo ps -e |grep ssh 查看服务是否启动
    sudo service ssh start"" 服务就会启动
   

    配置iptables和Fail2Ban增强安全防护
    1、ubuntu系统
    sudo apt-get update && sudo apt-get upgrade
    iptables -F
    sudo iptables -F 清楚默认配置
    sudo vi /etc/iptables.up.rules  新建文件
    *filter
     #allow all connections
    -A INPUT -m state --state ESTABLISHED,R");
            WriteLiteral(@"ELATED -j ACCEPT
    # allow out traffic
    -A OUTPUT -j ACCEPT
     #allow http https
    -A INPUT -p tcp --dport 443 -j ACCEPT

    -A INPUT -p tcp --dport 80 -j ACCEPT

    -A INPUT -p tcp --dport 8080 -j ACCEPT
     #allow ssh port login
    -A INPUT -p tcp -m state --state NEW --dport 30000 -j ACCEPT
    #allow ssh port login
    -A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT
    #ping
    -A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
    # log denied calls
    -A INPUT -m limit --limit  5/min -j LOG --log-prefix ""iptables denied:"" --log-level 7
    # drop incoming sensitive connections
    -A INPUT -p tcp --dport 80 -i eth0 -m state --state NEW -m recent --set

    -A INPUT -p tcp --dport 80 -i eth0 -m state --state NEW -m recent --update --seconds 60 --hitcount 150 -j DROP

    -A INPUT -j REJECT

    -A FORWARD -j REJECT
    COMMIT

保存
执行防火墙规则
sudo iptables-restore < /etc/iptables.up.rules 


sudo ufw status  查看 status : inactive
sudo ufw enable 激活防火墙配置");
            WriteLiteral(@"

留用备用方案
sudo vi /etc/network/if-up.d/iptables
#!/bin/sh
iptables-restore /etc/iptables.up.rules
保存
权限
sudo chmod +x /etc/network/if-up.d/iptables

安装Fail2ban
sudo apt-get install fail2ban
Y继续
 sudo vi /etc/fail2ban/jail.conf

bantime =3600

destemail = 18810114757@163.com

action = %(action_mw)s

maxretry =6
保存  

sudo service fail2ban status

sudo service fail2ban start
sudo service fail2ban stop




</pre>
        <a href=""https://blog.csdn.net/piaocoder/article/details/54707533"">iptables配置博客</a>
        <pre>
    nodejs部署  ubuntu

    sudo apt-get update  更新

    安装所需软件工具
    sudo apt-get install vim openssl build-essential libssl-dev wget curl git 
    

    https://github.com/creationix/nvm
    wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
    nvm install 8.0.0  、 nvm install v8.0.0
    nvm use 8.0.0  、 nvm use 8.0.0 
    nvm alias default 8.0.0
    配置npm镜像 taobao
    npm --registry=https://registry.npm.taobao.org in");
            WriteLiteral(@"stall -g npm

    echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p 文件监控数目

    npm --registry=https://registry.npm.taobao.org install -g cnpm

    cnpm 安装不上  cnpm sync koa
    
    其他辅助工具 不一定用的上
    npm i pm2 webpack gulp grunt-cli -g




</pre>
 <h5><a href=""https://blog.csdn.net/u010458114/article/details/70161486"">content</a></h5>
 












   <pre class=""hide"">
    1. 安装openssh-server
    yum install -y openssl openssh-server
    2. 修改配置文件
    用vim打开配置文件/etc/ssh/sshd_config  将PermitRootLogin，RSAAuthentication，PubkeyAuthentication的设置打开。

    启动ssh的服务：

    systemctl start sshd.service
    设置开机自动启动ssh服务

    systemctl enable sshd.service
    设置文件夹~/.ssh的访问权限：

  



    查看状态：

    systemctl status sshd.service

    启动服务：

    systemctl start sshd.service

    重启服务：

    systemctl restart sshd.service

    开机自启：

    systemctl enable sshd.service

            <code>ssh-copy-id -i C:/Users/jack/.ssh/id_r");
            WriteLiteral("sa.pub ubuntu@119.29.104.251 </code>\r\n</pre>\r\n        \r\n    </div>\r\n   \r\n</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
