#pragma checksum "E:\2018blog\JGSY.Robot.Blog\jgsy.robot.blog\Areas\NodeJs\Views\Node\Node2.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f364222ee3da8e3b88763426f8cb1f44f73a4a0f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_NodeJs_Views_Node_Node2), @"mvc.1.0.view", @"/Areas/NodeJs/Views/Node/Node2.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/NodeJs/Views/Node/Node2.cshtml", typeof(AspNetCore.Areas_NodeJs_Views_Node_Node2))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f364222ee3da8e3b88763426f8cb1f44f73a4a0f", @"/Areas/NodeJs/Views/Node/Node2.cshtml")]
    public class Areas_NodeJs_Views_Node_Node2 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1528, true);
            WriteLiteral(@"<div class=""col-lg-12 col-md-12 col-sm-12"">
    <h5>1、Node.js示例</h5>
</div>
<div class=""col-lg-12 col-md-12 col-sm-12"">
    <pre>
var http = require('http');

http.createServer(function (request, response) {
  response.writeHead(200, {'Content-Type': 'text/plain'});
  response.end('Hello World\n');
}).listen(8080);

console.log('Server running at http://127.0.0.1:8080/');
</pre>
</div>
<div class=""col-lg-12 col-md-12 col-sm-12"">
    <h5>2、Node.js之断言（assert：单元测试）</h5>
    <h6>require('assert')</h6>  
</div>
<div class=""col-lg-12 col-md-12 col-sm-12"">
    <pre>
assert.fail(actual, expected, message, operator)
使用参数operator测试参数actual (实际值) 和expected（期望值）是否相等。

assert(value[, message]), assert.ok(value[, message])
测试参数value是否为true,此函数和assert.equal(true, !!value, message);等价。

assert.equal(actual, expected[, message])
判断实际值actual和期望值expected是否相等。

assert.notEqual(actual, expected[, message])
判断实际值actual和期望值expected是否不等。

assert.deepEqual(actual, expected[, message])
执行深度比较，判断实际值act");
            WriteLiteral(@"ual和期望值expected是否相等。

assert.notDeepEqual(actual, expected[, message])
深度比较两个参数是否不相等。

assert.strictEqual(actual, expected[, message])
深度比较两个参数是否相等。

assert.notStrictEqual(actual, expected[, message])
此函数使用操作符 ‘!==’ 严格比较是否两参数不相等。

assert.throws(block[, error][, message])
声明一个block用来抛出错误（error），error可以是构造函数，正则表达式或其他验证器。

assert.doesNotThrow(block[, message])
声明block不抛出错误，详细信息参见assert.throws。

assert.ifError(value)
判断参数value是否为false ，如果是true，则抛出异常。通常用来测试回调中第一个参数error。
</pre>
</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
